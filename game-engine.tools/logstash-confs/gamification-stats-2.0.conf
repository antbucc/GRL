input {
  file {
    path => "${GAMIFICATION_LOG_FOLDER}/gamification.stats.log"
    start_position => end
    ignore_older => 0
    sincedb_path => "${GAMIFICATION_LOG_FOLDER}/stats-file-pointer"
    add_field => {
      "type-input" => "stats-2.0"
    }
  }
}
filter {
  if [type-input] == "stats-2.0" {
    grok {
      break_on_match => true
      match => {
         "message" => [
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} ruleName=%{QUOTEDSTRING:ruleName} name=%{QUOTEDSTRING:conceptName} deltaScore=%{NUMBER:deltaScore} score=%{NUMBER:score}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} ruleName=%{QUOTEDSTRING:ruleName} name=%{QUOTEDSTRING:conceptName} new_badge=%{QUOTEDSTRING:newBadge}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} classificationName=%{QUOTEDSTRING:classificationName} classificationPosition=%{NUMBER:classificationPosition}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} actionName=%{QUOTEDSTRING:actionName}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} name=%{QUOTEDSTRING:name} startDate=null endDate=%{NUMBER:endDate}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} name=%{QUOTEDSTRING:name} startDate=null endDate=null",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} name=%{QUOTEDSTRING:name} startDate=%{NUMBER:startDate} endDate=null",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} name=%{QUOTEDSTRING:name} startDate=%{NUMBER:startDate} endDate=%{NUMBER:endDate}",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} name=%{QUOTEDSTRING:name} completed",
            "%{WORD:logLevel} - %{QUOTEDSTRING:gameId} %{QUOTEDSTRING:playerId} %{UUID:executionId} %{NUMBER:executionTime} %{NUMBER:timestamp} type=%{WORD:eventType} creation"
            ]
      }
      add_field => { 
        "model-version" => "2.0" 
      }
    }
    if [model-version] == "2.0" {
        mutate {
        gsub => [
          "gameId", "\"", "",
          "playerId", "\"", "",
          "ruleName", "\"", "",
          "actionName", "\"", "",
          "conceptName", "\"", "",
          "classificationName", "\"", "",
          "name", "\"", ""
        ]
      }
      mutate {
        lowercase => [ "gameId" ]
      }
      mutate {
        add_field => { 
          # used by logstash to insert right type of document in ES
          "type" => "%{eventType}" 
        }
      }
    }
  }
}

output {
  if [type-input] == "stats-2.0" and [model-version] == "2.0" {
    elasticsearch {
      index => "gamification-stats-%{gameId}-%{+YYYY.MM.'w'ww}"
      manage_template => false
      hosts => [ "172.31.16.47:9200" ]
    }
  }
}
