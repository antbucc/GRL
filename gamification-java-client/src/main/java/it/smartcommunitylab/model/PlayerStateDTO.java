/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;
import it.smartcommunitylab.model.ext.GameConcept;
import it.smartcommunitylab.model.ext.PlayerLevel;

/**
 * PlayerStateDTO
 */

public class PlayerStateDTO {
  @SerializedName("customData")
  private Map<String, Object> customData = null;

  @SerializedName("gameId")
  private String gameId = null;

  @SerializedName("inventory")
  private Inventory inventory = null;

  @SerializedName("levels")
  private List<PlayerLevel> levels = null;

  @SerializedName("playerId")
  private String playerId = null;

  @SerializedName("state")
  private Map<String, java.util.Set<GameConcept>> state = null;

  public PlayerStateDTO customData(Map<String, Object> customData) {
    this.customData = customData;
    return this;
  }

  public PlayerStateDTO putCustomDataItem(String key, Object customDataItem) {
    if (this.customData == null) {
      this.customData = new HashMap<String, Object>();
    }
    this.customData.put(key, customDataItem);
    return this;
  }

   /**
   * Get customData
   * @return customData
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getCustomData() {
    return customData;
  }

  public void setCustomData(Map<String, Object> customData) {
    this.customData = customData;
  }

  public PlayerStateDTO gameId(String gameId) {
    this.gameId = gameId;
    return this;
  }

   /**
   * Get gameId
   * @return gameId
  **/
  @ApiModelProperty(value = "")
  public String getGameId() {
    return gameId;
  }

  public void setGameId(String gameId) {
    this.gameId = gameId;
  }

  public PlayerStateDTO inventory(Inventory inventory) {
    this.inventory = inventory;
    return this;
  }

   /**
   * Get inventory
   * @return inventory
  **/
  @ApiModelProperty(value = "")
  public Inventory getInventory() {
    return inventory;
  }

  public void setInventory(Inventory inventory) {
    this.inventory = inventory;
  }

  public PlayerStateDTO levels(List<PlayerLevel> levels) {
    this.levels = levels;
    return this;
  }

  public PlayerStateDTO addLevelsItem(PlayerLevel levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<PlayerLevel>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @ApiModelProperty(value = "")
  public List<PlayerLevel> getLevels() {
    return levels;
  }

  public void setLevels(List<PlayerLevel> levels) {
    this.levels = levels;
  }

  public PlayerStateDTO playerId(String playerId) {
    this.playerId = playerId;
    return this;
  }

   /**
   * Get playerId
   * @return playerId
  **/
  @ApiModelProperty(value = "")
  public String getPlayerId() {
    return playerId;
  }

  public void setPlayerId(String playerId) {
    this.playerId = playerId;
  }

  public PlayerStateDTO state(Map<String, java.util. Set<GameConcept>> state) {
    this.state = state;
    return this;
  }

  public PlayerStateDTO putStateItem(String key, java.util.Set<GameConcept> stateItem) {
    if (this.state == null) {
      this.state = new HashMap<String, java.util. Set<GameConcept>>();
    }
    this.state.put(key, stateItem);
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public Map<String, java.util. Set<GameConcept>> getState() {
    return state;
  }

  public void setState(Map<String, java.util. Set<GameConcept>> state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerStateDTO playerStateDTO = (PlayerStateDTO) o;
    return Objects.equals(this.customData, playerStateDTO.customData) &&
        Objects.equals(this.gameId, playerStateDTO.gameId) &&
        Objects.equals(this.inventory, playerStateDTO.inventory) &&
        Objects.equals(this.levels, playerStateDTO.levels) &&
        Objects.equals(this.playerId, playerStateDTO.playerId) &&
        Objects.equals(this.state, playerStateDTO.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customData, gameId, inventory, levels, playerId, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerStateDTO {\n");
    
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    gameId: ").append(toIndentedString(gameId)).append("\n");
    sb.append("    inventory: ").append(toIndentedString(inventory)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    playerId: ").append(toIndentedString(playerId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   .Set<GameConcept>> (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

