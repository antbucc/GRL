/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.model;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.annotations.ApiModelProperty;

/**
 * ChallengeConcept
 */

public class ChallengeConcept {
  @SerializedName("completed")
  private Boolean completed = null;

  @SerializedName("dateCompleted")
  private Date dateCompleted = null;

  @SerializedName("end")
  private Date end = null;

  @SerializedName("fields")
  private Object fields = null;

  @SerializedName("forced")
  private Boolean forced = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("modelName")
  private String modelName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("origin")
  private String origin = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("start")
  private Date start = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    PROPOSED("PROPOSED"),
    
    ASSIGNED("ASSIGNED"),
    
    ACTIVE("ACTIVE"),
    
    COMPLETED("COMPLETED"),
    
    FAILED("FAILED"),
    
    REFUSED("REFUSED"),
    
    AUTO_DISCARDED("AUTO_DISCARDED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("stateDate")
  private Map<String, Date> stateDate = null;

  public ChallengeConcept completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @ApiModelProperty(value = "")
  public Boolean isCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }

  public ChallengeConcept dateCompleted(Date dateCompleted) {
    this.dateCompleted = dateCompleted;
    return this;
  }

   /**
   * Get dateCompleted
   * @return dateCompleted
  **/
  @ApiModelProperty(value = "")
  public Date getDateCompleted() {
    return dateCompleted;
  }

  public void setDateCompleted(Date dateCompleted) {
    this.dateCompleted = dateCompleted;
  }

  public ChallengeConcept end(Date end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @ApiModelProperty(value = "")
  public Date getEnd() {
    return end;
  }

  public void setEnd(Date end) {
    this.end = end;
  }

  public ChallengeConcept fields(Object fields) {
    this.fields = fields;
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @ApiModelProperty(value = "")
  public Object getFields() {
    return fields;
  }

  public void setFields(Object fields) {
    this.fields = fields;
  }

  public ChallengeConcept forced(Boolean forced) {
    this.forced = forced;
    return this;
  }

   /**
   * Get forced
   * @return forced
  **/
  @ApiModelProperty(value = "")
  public Boolean isForced() {
    return forced;
  }

  public void setForced(Boolean forced) {
    this.forced = forced;
  }

  public ChallengeConcept id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ChallengeConcept modelName(String modelName) {
    this.modelName = modelName;
    return this;
  }

   /**
   * Get modelName
   * @return modelName
  **/
  @ApiModelProperty(value = "")
  public String getModelName() {
    return modelName;
  }

  public void setModelName(String modelName) {
    this.modelName = modelName;
  }

  public ChallengeConcept name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ChallengeConcept origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public ChallengeConcept priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public ChallengeConcept start(Date start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(value = "")
  public Date getStart() {
    return start;
  }

  public void setStart(Date start) {
    this.start = start;
  }

  public ChallengeConcept state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public ChallengeConcept stateDate(Map<String, Date> stateDate) {
    this.stateDate = stateDate;
    return this;
  }

  public ChallengeConcept putStateDateItem(String key, Date stateDateItem) {
    if (this.stateDate == null) {
      this.stateDate = new HashMap<String, Date>();
    }
    this.stateDate.put(key, stateDateItem);
    return this;
  }

   /**
   * Get stateDate
   * @return stateDate
  **/
  @ApiModelProperty(value = "")
  public Map<String, Date> getStateDate() {
    return stateDate;
  }

  public void setStateDate(Map<String, Date> stateDate) {
    this.stateDate = stateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengeConcept challengeConcept = (ChallengeConcept) o;
    return Objects.equals(this.completed, challengeConcept.completed) &&
        Objects.equals(this.dateCompleted, challengeConcept.dateCompleted) &&
        Objects.equals(this.end, challengeConcept.end) &&
        Objects.equals(this.fields, challengeConcept.fields) &&
        Objects.equals(this.forced, challengeConcept.forced) &&
        Objects.equals(this.id, challengeConcept.id) &&
        Objects.equals(this.modelName, challengeConcept.modelName) &&
        Objects.equals(this.name, challengeConcept.name) &&
        Objects.equals(this.origin, challengeConcept.origin) &&
        Objects.equals(this.priority, challengeConcept.priority) &&
        Objects.equals(this.start, challengeConcept.start) &&
        Objects.equals(this.state, challengeConcept.state) &&
        Objects.equals(this.stateDate, challengeConcept.stateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completed, dateCompleted, end, fields, forced, id, modelName, name, origin, priority, start, state, stateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengeConcept {\n");
    
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    dateCompleted: ").append(toIndentedString(dateCompleted)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    forced: ").append(toIndentedString(forced)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateDate: ").append(toIndentedString(stateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

