/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.model;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * RewardDTO
 */

public class RewardDTO {
  @SerializedName("bonusScore")
  private Map<String, Double> bonusScore = null;

  @SerializedName("calculationPointConcept")
  private PointConceptDTO calculationPointConcept = null;

  @SerializedName("percentage")
  private Double percentage = null;

  @SerializedName("targetPointConcept")
  private PointConceptDTO targetPointConcept = null;

  @SerializedName("threshold")
  private Double threshold = null;

  public RewardDTO bonusScore(Map<String, Double> bonusScore) {
    this.bonusScore = bonusScore;
    return this;
  }

  public RewardDTO putBonusScoreItem(String key, Double bonusScoreItem) {
    if (this.bonusScore == null) {
      this.bonusScore = new HashMap<String, Double>();
    }
    this.bonusScore.put(key, bonusScoreItem);
    return this;
  }

   /**
   * Get bonusScore
   * @return bonusScore
  **/
  @ApiModelProperty(value = "")
  public Map<String, Double> getBonusScore() {
    return bonusScore;
  }

  public void setBonusScore(Map<String, Double> bonusScore) {
    this.bonusScore = bonusScore;
  }

  public RewardDTO calculationPointConcept(PointConceptDTO calculationPointConcept) {
    this.calculationPointConcept = calculationPointConcept;
    return this;
  }

   /**
   * Get calculationPointConcept
   * @return calculationPointConcept
  **/
  @ApiModelProperty(value = "")
  public PointConceptDTO getCalculationPointConcept() {
    return calculationPointConcept;
  }

  public void setCalculationPointConcept(PointConceptDTO calculationPointConcept) {
    this.calculationPointConcept = calculationPointConcept;
  }

  public RewardDTO percentage(Double percentage) {
    this.percentage = percentage;
    return this;
  }

   /**
   * Get percentage
   * @return percentage
  **/
  @ApiModelProperty(value = "")
  public Double getPercentage() {
    return percentage;
  }

  public void setPercentage(Double percentage) {
    this.percentage = percentage;
  }

  public RewardDTO targetPointConcept(PointConceptDTO targetPointConcept) {
    this.targetPointConcept = targetPointConcept;
    return this;
  }

   /**
   * Get targetPointConcept
   * @return targetPointConcept
  **/
  @ApiModelProperty(value = "")
  public PointConceptDTO getTargetPointConcept() {
    return targetPointConcept;
  }

  public void setTargetPointConcept(PointConceptDTO targetPointConcept) {
    this.targetPointConcept = targetPointConcept;
  }

  public RewardDTO threshold(Double threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @ApiModelProperty(value = "")
  public Double getThreshold() {
    return threshold;
  }

  public void setThreshold(Double threshold) {
    this.threshold = threshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RewardDTO rewardDTO = (RewardDTO) o;
    return Objects.equals(this.bonusScore, rewardDTO.bonusScore) &&
        Objects.equals(this.calculationPointConcept, rewardDTO.calculationPointConcept) &&
        Objects.equals(this.percentage, rewardDTO.percentage) &&
        Objects.equals(this.targetPointConcept, rewardDTO.targetPointConcept) &&
        Objects.equals(this.threshold, rewardDTO.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bonusScore, calculationPointConcept, percentage, targetPointConcept, threshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RewardDTO {\n");
    
    sb.append("    bonusScore: ").append(toIndentedString(bonusScore)).append("\n");
    sb.append("    calculationPointConcept: ").append(toIndentedString(calculationPointConcept)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    targetPointConcept: ").append(toIndentedString(targetPointConcept)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

