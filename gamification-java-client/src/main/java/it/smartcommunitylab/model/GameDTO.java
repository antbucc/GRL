/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;
import it.smartcommunitylab.model.ext.PointConcept;

/**
 * GameDTO
 */

public class GameDTO {
  @SerializedName("actions")
  private List<String> actions = null;

  @SerializedName("badgeCollectionConcept")
  private List<BadgeCollectionConcept> badgeCollectionConcept = null;

  @SerializedName("challengeChoiceConfig")
  private ChallengeChoiceConfig challengeChoiceConfig = null;

  @SerializedName("classificationTask")
  private List<ClassificationDTO> classificationTask = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("expiration")
  private Long expiration = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("levels")
  private List<LevelDTO> levels = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("pointConcept")
  private List<PointConcept> pointConcept = null;

  @SerializedName("rules")
  private List<RuleDTO> rules = null;

  @SerializedName("settings")
  private Settings settings = null;

  @SerializedName("terminated")
  private Boolean terminated = null;

  public GameDTO actions(List<String> actions) {
    this.actions = actions;
    return this;
  }

  public GameDTO addActionsItem(String actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<String>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @ApiModelProperty(value = "")
  public List<String> getActions() {
    return actions;
  }

  public void setActions(List<String> actions) {
    this.actions = actions;
  }

  public GameDTO badgeCollectionConcept(List<BadgeCollectionConcept> badgeCollectionConcept) {
    this.badgeCollectionConcept = badgeCollectionConcept;
    return this;
  }

  public GameDTO addBadgeCollectionConceptItem(BadgeCollectionConcept badgeCollectionConceptItem) {
    if (this.badgeCollectionConcept == null) {
      this.badgeCollectionConcept = new ArrayList<BadgeCollectionConcept>();
    }
    this.badgeCollectionConcept.add(badgeCollectionConceptItem);
    return this;
  }

   /**
   * Get badgeCollectionConcept
   * @return badgeCollectionConcept
  **/
  @ApiModelProperty(value = "")
  public List<BadgeCollectionConcept> getBadgeCollectionConcept() {
    return badgeCollectionConcept;
  }

  public void setBadgeCollectionConcept(List<BadgeCollectionConcept> badgeCollectionConcept) {
    this.badgeCollectionConcept = badgeCollectionConcept;
  }

  public GameDTO challengeChoiceConfig(ChallengeChoiceConfig challengeChoiceConfig) {
    this.challengeChoiceConfig = challengeChoiceConfig;
    return this;
  }

   /**
   * Get challengeChoiceConfig
   * @return challengeChoiceConfig
  **/
  @ApiModelProperty(value = "")
  public ChallengeChoiceConfig getChallengeChoiceConfig() {
    return challengeChoiceConfig;
  }

  public void setChallengeChoiceConfig(ChallengeChoiceConfig challengeChoiceConfig) {
    this.challengeChoiceConfig = challengeChoiceConfig;
  }

  public GameDTO classificationTask(List<ClassificationDTO> classificationTask) {
    this.classificationTask = classificationTask;
    return this;
  }

  public GameDTO addClassificationTaskItem(ClassificationDTO classificationTaskItem) {
    if (this.classificationTask == null) {
      this.classificationTask = new ArrayList<ClassificationDTO>();
    }
    this.classificationTask.add(classificationTaskItem);
    return this;
  }

   /**
   * Get classificationTask
   * @return classificationTask
  **/
  @ApiModelProperty(value = "")
  public List<ClassificationDTO> getClassificationTask() {
    return classificationTask;
  }

  public void setClassificationTask(List<ClassificationDTO> classificationTask) {
    this.classificationTask = classificationTask;
  }

  public GameDTO domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @ApiModelProperty(value = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public GameDTO expiration(Long expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @ApiModelProperty(value = "")
  public Long getExpiration() {
    return expiration;
  }

  public void setExpiration(Long expiration) {
    this.expiration = expiration;
  }

  public GameDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GameDTO levels(List<LevelDTO> levels) {
    this.levels = levels;
    return this;
  }

  public GameDTO addLevelsItem(LevelDTO levelsItem) {
    if (this.levels == null) {
      this.levels = new ArrayList<LevelDTO>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * Get levels
   * @return levels
  **/
  @ApiModelProperty(value = "")
  public List<LevelDTO> getLevels() {
    return levels;
  }

  public void setLevels(List<LevelDTO> levels) {
    this.levels = levels;
  }

  public GameDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GameDTO owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public GameDTO pointConcept(List<PointConcept> pointConcept) {
    this.pointConcept = pointConcept;
    return this;
  }

  public GameDTO addPointConceptItem(PointConcept pointConceptItem) {
    if (this.pointConcept == null) {
      this.pointConcept = new ArrayList<PointConcept>();
    }
    this.pointConcept.add(pointConceptItem);
    return this;
  }

   /**
   * Get pointConcept
   * @return pointConcept
  **/
  @ApiModelProperty(value = "")
  public List<PointConcept> getPointConcept() {
    return pointConcept;
  }

  public void setPointConcept(List<PointConcept> pointConcept) {
    this.pointConcept = pointConcept;
  }

  public GameDTO rules(List<RuleDTO> rules) {
    this.rules = rules;
    return this;
  }

  public GameDTO addRulesItem(RuleDTO rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<RuleDTO>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @ApiModelProperty(value = "")
  public List<RuleDTO> getRules() {
    return rules;
  }

  public void setRules(List<RuleDTO> rules) {
    this.rules = rules;
  }

  public GameDTO settings(Settings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @ApiModelProperty(value = "")
  public Settings getSettings() {
    return settings;
  }

  public void setSettings(Settings settings) {
    this.settings = settings;
  }

  public GameDTO terminated(Boolean terminated) {
    this.terminated = terminated;
    return this;
  }

   /**
   * Get terminated
   * @return terminated
  **/
  @ApiModelProperty(value = "")
  public Boolean isTerminated() {
    return terminated;
  }

  public void setTerminated(Boolean terminated) {
    this.terminated = terminated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameDTO gameDTO = (GameDTO) o;
    return Objects.equals(this.actions, gameDTO.actions) &&
        Objects.equals(this.badgeCollectionConcept, gameDTO.badgeCollectionConcept) &&
        Objects.equals(this.challengeChoiceConfig, gameDTO.challengeChoiceConfig) &&
        Objects.equals(this.classificationTask, gameDTO.classificationTask) &&
        Objects.equals(this.domain, gameDTO.domain) &&
        Objects.equals(this.expiration, gameDTO.expiration) &&
        Objects.equals(this.id, gameDTO.id) &&
        Objects.equals(this.levels, gameDTO.levels) &&
        Objects.equals(this.name, gameDTO.name) &&
        Objects.equals(this.owner, gameDTO.owner) &&
        Objects.equals(this.pointConcept, gameDTO.pointConcept) &&
        Objects.equals(this.rules, gameDTO.rules) &&
        Objects.equals(this.settings, gameDTO.settings) &&
        Objects.equals(this.terminated, gameDTO.terminated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, badgeCollectionConcept, challengeChoiceConfig, classificationTask, domain, expiration, id, levels, name, owner, pointConcept, rules, settings, terminated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameDTO {\n");
    
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    badgeCollectionConcept: ").append(toIndentedString(badgeCollectionConcept)).append("\n");
    sb.append("    challengeChoiceConfig: ").append(toIndentedString(challengeChoiceConfig)).append("\n");
    sb.append("    classificationTask: ").append(toIndentedString(classificationTask)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    pointConcept: ").append(toIndentedString(pointConcept)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    terminated: ").append(toIndentedString(terminated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

