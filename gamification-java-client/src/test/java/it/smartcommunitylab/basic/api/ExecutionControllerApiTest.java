/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.basic.api;

import java.util.Date;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import it.smartcommunitylab.ApiClient;
import it.smartcommunitylab.ApiException;
import it.smartcommunitylab.auth.HttpBasicAuth;
import it.smartcommunitylab.model.ext.ExecutionDataDTO;


/**
 * API tests for ExecutionControllerApi
 */
@Ignore
public class ExecutionControllerApiTest {

    private final ExecutionControllerApi api = new ExecutionControllerApi();
    private ApiClient apiClient;
	private final String userName = "long-rovereto";
	private final String password = "rov";
	private String baseUrl = "http://localhost:6060/gamification";
	private String gameId = "5b7a885149c95d50c5f9d442";
	private String playerId = "8";

    
	@Before
	public void init() {
		apiClient = new ApiClient(baseUrl);

		// Configure OAuth2 access token for authorization: oauth2
		// OAuth oauth2 = (OAuth) apiClient.getAuthentication("oauth2");
		// oauth2.setAccessToken("YOUR_ACCESS_TOKEN");

		// Configure basic auth.
		HttpBasicAuth basic = (HttpBasicAuth) apiClient.getAuthentication("basic");
		basic.setUsername(userName);
		basic.setPassword(password);

		api.setApiClient(apiClient);
	}

	
    /**
     * Execute an action
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeActionUsingPOSTTest() throws ApiException {
        String actionId = "test";
        ExecutionDataDTO data = new ExecutionDataDTO();
        data.setActionId("test");
        data.setGameId(gameId);
        data.setPlayerId(playerId);
        data.setExecutionMoment(new Date());        
        
        api.executeActionUsingPOST(gameId, actionId, data);       
        

        // TODO: test validations
    }
    
}
