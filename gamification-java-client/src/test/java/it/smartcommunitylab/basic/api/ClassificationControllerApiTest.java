/**
 * Copyright 2018-2019 SmartCommunity Lab(FBK-ICT).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

/*
 * Gamification Engine API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.smartcommunitylab.basic.api;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import it.smartcommunitylab.ApiException;
import it.smartcommunitylab.model.ClassificationBoard;
import it.smartcommunitylab.model.GeneralClassificationDTO;
import it.smartcommunitylab.model.IncrementalClassificationDTO;

/**
 * API tests for ClassificationControllerApi
 */
@Ignore
public class ClassificationControllerApiTest {

    private final ClassificationControllerApi api = new ClassificationControllerApi();

    
    /**
     * Add general classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addClassificationTaskUsingPOSTTest() throws ApiException {
        String gameId = null;
        GeneralClassificationDTO task = null;
        GeneralClassificationDTO response = api.addClassificationTaskUsingPOST(gameId, task);

        // TODO: test validations
    }
    
    /**
     * Add incremental classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIncrementalUsingPOSTTest() throws ApiException {
        String gameId = null;
        IncrementalClassificationDTO classification = null;
        IncrementalClassificationDTO response = api.createIncrementalUsingPOST(gameId, classification);

        // TODO: test validations
    }
    
    /**
     * Delete general classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClassificationTaskUsingDELETETest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        api.deleteClassificationTaskUsingDELETE(gameId, classificationId);

        // TODO: test validations
    }
    
    /**
     * Delete incremental classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIncrementalUsingDELETETest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        api.deleteIncrementalUsingDELETE(gameId, classificationId);

        // TODO: test validations
    }
    
    /**
     * Edit general classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editClassificationTaskUsingPUTTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        GeneralClassificationDTO task = null;
        api.editClassificationTaskUsingPUT(gameId, classificationId, task);

        // TODO: test validations
    }
    
    /**
     * Read general classification board
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGeneralClassificationUsingGETTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        Integer page = null;
        Integer size = null;
        ClassificationBoard response = api.getGeneralClassificationUsingGET(gameId, classificationId, page, size);

        // TODO: test validations
    }
    
    /**
     * Read incremental classification board
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIncrementalClassificationUsingGETTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        Long timestamp = null;
        Integer periodInstanceIndex = null;
        Integer page = null;
        Integer size = null;
        ClassificationBoard response = api.getIncrementalClassificationUsingGET(gameId, classificationId, timestamp, periodInstanceIndex, page, size);

        // TODO: test validations
    }
    
    /**
     * Get general classification definitions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAllGeneralClassificationsUsingGETTest() throws ApiException {
        String gameId = null;
        List<GeneralClassificationDTO> response = api.readAllGeneralClassificationsUsingGET(gameId);

        // TODO: test validations
    }
    
    /**
     * Get incremental classification defintions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAllIncrementalUsingGETTest() throws ApiException {
        String gameId = null;
        List<IncrementalClassificationDTO> response = api.readAllIncrementalUsingGET(gameId);

        // TODO: test validations
    }
    
    /**
     * Get general classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readGeneralClassificationUsingGETTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        GeneralClassificationDTO response = api.readGeneralClassificationUsingGET(gameId, classificationId);

        // TODO: test validations
    }
    
    /**
     * Get incremental classification defition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readIncrementalUsingGETTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        IncrementalClassificationDTO response = api.readIncrementalUsingGET(gameId, classificationId);

        // TODO: test validations
    }
    
    /**
     * Edit general classification definition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIncrementalClassificationUsingPUTTest() throws ApiException {
        String gameId = null;
        String classificationId = null;
        IncrementalClassificationDTO classification = null;
        api.updateIncrementalClassificationUsingPUT(gameId, classificationId, classification);

        // TODO: test validations
    }
    
}
