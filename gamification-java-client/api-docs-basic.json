{
  "swagger": "2.0",
  "info": {
    "version": "v1.0",
    "title": "Gamification Engine API",
    "contact": {
      "name": "FBK Smartcommunitylab HII",
      "url": "http://fbk.eu"
    },
    "license": {
      "name": "APACHE LICENSE 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "basePath": "/gamification",
   "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "HTTP Basic Authentication"
    }
  },
  "security": [
    {
      "basic": []
    }
  ],
  "tags": [
    {
      "name": "classification-controller",
      "description": "Classification Controller"
    },
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "challenge-controller",
      "description": "Challenge Controller"
    },
    {
      "name": "team-controller",
      "description": "Team Controller"
    },
    {
      "name": "challenge-model-controller",
      "description": "Challenge Model Controller"
    },
    {
      "name": "console-controller",
      "description": "Console Controller"
    },
    {
      "name": "archive-concept-controller",
      "description": "Archive Concept Controller"
    },
    {
      "name": "notification-controller",
      "description": "Notification Controller"
    },
    {
      "name": "execution-controller",
      "description": "Execution Controller"
    },
    {
      "name": "game-controller",
      "description": "Game Controller"
    },
    {
      "name": "point-concept-controller",
      "description": "Point Concept Controller"
    },
    {
      "name": "player-controller",
      "description": "Player Controller"
    },
    {
      "name": "badge-collection-concept-controller",
      "description": "Badge Collection Concept Controller"
    },
    {
      "name": "main-controller",
      "description": "Main Controller"
    },
    {
      "name": "rule-controller",
      "description": "Rule Controller"
    }
  ],
  "paths": {
    "/admin/data/game/{gameId}/player": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "readPlayerStates",
        "operationId": "readPlayerStatesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerFilter",
            "in": "query",
            "description": "playerFilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«PlayerStateDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/data/game/{gameId}/player/{playerId}": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "readPlayerState",
        "operationId": "readPlayerStateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerFilter",
            "in": "query",
            "description": "playerFilter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readGames",
        "operationId": "readGamesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "saveGame",
        "operationId": "saveGameUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "game",
            "description": "game",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game-by-domain": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readGamesByDomain",
        "operationId": "readGamesByDomainUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readGame",
        "operationId": "readGameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "console-controller"
        ],
        "summary": "deleteGame",
        "operationId": "deleteGameUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/console/game/{gameId}/badgecoll": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readBadgeCollections",
        "operationId": "readBadgeCollectionsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BadgeCollectionConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "addBadge",
        "operationId": "addBadgeUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "badge",
            "description": "badge",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BadgeCollectionConcept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/player": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "createPlayer",
        "operationId": "createPlayerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "player",
            "description": "player",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/player/{playerId}": {
      "put": {
        "tags": [
          "console-controller"
        ],
        "summary": "updateCustomData",
        "operationId": "updateCustomDataUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customData",
            "description": "customData",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "console-controller"
        ],
        "summary": "deletePlayer",
        "operationId": "deletePlayerUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/console/game/{gameId}/player/{playerId}/teams": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readTeamsByMember",
        "operationId": "readTeamsByMemberUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/point": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readPoints",
        "operationId": "readPointsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PointConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "addPoint",
        "operationId": "addPointUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "point",
            "description": "point",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PointConcept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/rule/db": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "addRule",
        "operationId": "addRuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "rule",
            "description": "rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/rule/db/{ruleUrl}": {
      "get": {
        "tags": [
          "console-controller"
        ],
        "summary": "readDbRule",
        "operationId": "readDbRuleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleUrl",
            "in": "path",
            "description": "ruleUrl",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "console-controller"
        ],
        "summary": "deleteDbRule",
        "operationId": "deleteDbRuleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleUrl",
            "in": "path",
            "description": "ruleUrl",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/console/game/{gameId}/task": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "addClassificationTask",
        "operationId": "addClassificationTaskUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "console-controller"
        ],
        "summary": "editClassificationTask",
        "operationId": "editClassificationTaskUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/task/del": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "deleteClassificationTask",
        "operationId": "deleteClassificationTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/team": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "createTeam",
        "operationId": "createTeamUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "team",
            "description": "team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/game/{gameId}/team/{teamId}": {
      "delete": {
        "tags": [
          "console-controller"
        ],
        "summary": "deleteTeam",
        "operationId": "deleteTeamUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/console/game/{gameId}/team/{teamId}/members": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "updateTeamMembers",
        "operationId": "updateTeamMembersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "members",
            "description": "members",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/console/rule/validate": {
      "post": {
        "tags": [
          "console-controller"
        ],
        "summary": "validateRule",
        "operationId": "validateRuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ruleContent",
            "description": "ruleContent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/archive": {
      "get": {
        "tags": [
          "archive-concept-controller"
        ],
        "summary": "Read archive concepts for a game with optional filter parameters",
        "operationId": "readArchivesForGameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "query",
            "description": "playerId",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArchivedConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/classification/{classificationId}": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Read general classification board",
        "operationId": "getGeneralClassificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClassificationBoard"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/group-challenges": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "assignGroupChallenge",
        "operationId": "assignGroupChallengeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "challengeData",
            "description": "challengeData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GroupChallengeDTO"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/incclassification/{classificationId}": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Read incremental classification board",
        "operationId": "getIncrementalClassificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "timestamp",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "periodInstanceIndex",
            "in": "query",
            "description": "periodInstanceIndex",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClassificationBoard"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/search": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Search player states",
        "operationId": "searchByQueryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "query",
            "description": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WrapperQuery"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«PlayerStateDTO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player state",
        "operationId": "readPlayerUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
		  {
            "name": "readChallenges",
            "in": "query",
            "description": "readChallenges",
            "required": false,
            "type": "boolean"
          },
		  {
			"name": "points",
			"in": "query",
			"required": false,
			"type": "array",
			"items": {
				"type": "string"
			},
            "collectionFormat": "multi"
		 },
		 {
			"name": "badges",
			"in": "query",
			"required": false,
			"type": "array",
			"items": {
				"type": "string"
			},
            "collectionFormat": "multi"
		 }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Create player",
        "operationId": "createPlayerUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "player",
            "description": "player",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "player-controller"
        ],
        "summary": "Edit player state",
        "operationId": "updatePlayerUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "player-controller"
        ],
        "summary": "Delete player state",
        "operationId": "deletePlayerUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/blacklist": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player black list of other players",
        "operationId": "readPlayerBlackListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerBlackList"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/block/{otherPlayerId}": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Add another player to challenge block list",
        "operationId": "blockPlayerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "otherPlayerId",
            "in": "path",
            "description": "otherPlayerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerBlackList"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/challenge/{instanceName}": {
      "put": {
        "tags": [
          "challenge-controller"
        ],
        "summary": "updateChallenge",
        "operationId": "updateChallengeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "changes",
            "description": "changes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChallengeConcept"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "challenge-controller"
        ],
        "summary": "deleteChallenge",
        "operationId": "deleteChallengeUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChallengeConcept"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/challengers": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get availabe challengers for the player",
        "operationId": "readSystemPlayerStateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "conceptName",
            "in": "query",
            "description": "conceptName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/challenges": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player challenges",
        "operationId": "getPlayerChallengeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChallengeConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Assign challenge",
        "operationId": "assignChallengeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "challengeData",
            "description": "challengeData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeAssignmentDTO"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/challenges/{challengeName}/accept": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Accept challenge",
        "operationId": "acceptChallengeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "challengeName",
            "in": "path",
            "description": "challengeName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChallengeConcept"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/custom": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player custom data",
        "operationId": "readCustomDataUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "player-controller"
        ],
        "summary": "updateCustomData",
        "operationId": "updateCustomDataUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customData",
            "description": "customData",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/inventory": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player inventory",
        "operationId": "readInventoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/inventory/activate": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Activate a choice",
        "operationId": "activateChoiceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "choice",
            "description": "choice",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemChoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/invitation": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "inviteIntoAChallenge",
        "operationId": "inviteIntoAChallengeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "invitation",
            "description": "invitation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeInvitation"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChallengeInvitation"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/invitation/accept/{challengeName}": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "acceptInvitation",
        "operationId": "acceptInvitationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "challengeName",
            "in": "path",
            "description": "challengeName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/invitation/cancel/{challengeName}": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "cancelInvitation",
        "operationId": "cancelInvitationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "challengeName",
            "in": "path",
            "description": "challengeName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/invitation/refuse/{challengeName}": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "refuseInvitation",
        "operationId": "refuseInvitationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "challengeName",
            "in": "path",
            "description": "challengeName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/levels": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player levels",
        "operationId": "readLevelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PlayerLevel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/state": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player state",
        "operationId": "readStateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
		  {
			"name": "points",
			"in": "query",
			"required": false,
			"type": "array",
			"items": {
				"type": "string"
			},
            "collectionFormat": "multi"
		 },
		 {
			"name": "badges",
			"in": "query",
			"required": false,
			"type": "array",
			"items": {
				"type": "string"
			},
            "collectionFormat": "multi"
		 }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/teams": {
      "get": {
        "tags": [
          "player-controller"
        ],
        "summary": "Get player teams",
        "operationId": "readTeamsByMemberUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/player/{playerId}/unblock/{otherPlayerId}": {
      "post": {
        "tags": [
          "player-controller"
        ],
        "summary": "Unblock another player from challenge block list",
        "operationId": "unBlockPlayerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "otherPlayerId",
            "in": "path",
            "description": "otherPlayerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerBlackList"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/statistics": {
      "get": {
        "tags": [
          "game-controller"
        ],
        "summary": "Get game statistics",
        "operationId": "readGameStatisticsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointConceptName",
            "in": "query",
            "description": "pointConceptName",
            "required": false,
            "type": "string"
          },
          {
            "name": "periodName",
            "in": "query",
            "description": "periodName",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "timestamp",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "periodIndex",
            "in": "query",
            "description": "periodIndex",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameStatistics"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/team/{teamId}": {
      "post": {
        "tags": [
          "team-controller"
        ],
        "summary": "Create team",
        "operationId": "createTeamUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "team",
            "description": "team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "team-controller"
        ],
        "summary": "Delete team",
        "operationId": "deleteTeamUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/game/{gameId}/team/{teamId}/members": {
      "get": {
        "tags": [
          "team-controller"
        ],
        "summary": "Get team members",
        "operationId": "readTeamMembersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Collection«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "team-controller"
        ],
        "summary": "Edit team",
        "operationId": "updateTeamMembersUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "members",
            "description": "members",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/data/game/{gameId}/team/{teamId}/members/{playerId}": {
      "put": {
        "tags": [
          "team-controller"
        ],
        "summary": "Add team member",
        "operationId": "addTeamMemberUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "team-controller"
        ],
        "summary": "Delete team member",
        "operationId": "removeTeamMemberUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/exec/game/{gameId}/action/{actionId}": {
      "post": {
        "tags": [
          "execution-controller"
        ],
        "summary": "Execute an action",
        "operationId": "executeActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "actionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecutionDataDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/gengine/execute": {
      "post": {
        "tags": [
          "main-controller"
        ],
        "summary": "Execute an action",
        "description": "Execute an action in a game",
        "operationId": "executeActionUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecutionDataDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/gengine/notification/{gameId}": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "summary": "Get notifications",
        "description": "Get the notifications of a game",
        "operationId": "readNotificationUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "timestamp",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/gengine/notification/{gameId}/{playerId}": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "summary": "Get player notifications",
        "description": "Get the player notifications of a game",
        "operationId": "readNotificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "timestamp",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true
      }
    },
    "/gengine/state/{gameId}": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "summary": "Get player states",
        "description": "Get the state of players in a game filter by optional player name",
        "operationId": "readPlayerStateUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerFilter",
            "in": "query",
            "description": "playerFilter",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«PlayerStateDTO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/gengine/state/{gameId}/{playerId}": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "summary": "Get player state",
        "description": "Get the state of a player in a game",
        "operationId": "readPlayerStateUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlayerStateDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game": {
      "get": {
        "tags": [
          "game-controller"
        ],
        "summary": "Get games",
        "description": "Get all the game definitions of a user",
        "operationId": "readGamesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GameDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "game-controller"
        ],
        "summary": "Save a game",
        "operationId": "saveGameUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "game",
            "description": "game",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{domain}/action/{actionId}": {
      "put": {
        "tags": [
          "game-controller"
        ],
        "summary": "Edit action",
        "operationId": "editActionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}": {
      "get": {
        "tags": [
          "game-controller"
        ],
        "summary": "Read game definition",
        "operationId": "readGameUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GameDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "game-controller"
        ],
        "summary": "Delete game",
        "operationId": "deleteGameUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/action": {
      "get": {
        "tags": [
          "game-controller"
        ],
        "summary": "Get actions",
        "operationId": "readAllActionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/action/{actionId}": {
      "get": {
        "tags": [
          "game-controller"
        ],
        "summary": "Get action",
        "operationId": "readActionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "game-controller"
        ],
        "summary": "Add action",
        "operationId": "addActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "game-controller"
        ],
        "summary": "Delete action",
        "operationId": "deleteActionUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionId",
            "in": "path",
            "description": "actionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/badges": {
      "get": {
        "tags": [
          "badge-collection-concept-controller"
        ],
        "summary": "Get the badge collections",
        "description": "Get badge collections in a game",
        "operationId": "readBadgeCollectionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BadgeCollectionConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "badge-collection-concept-controller"
        ],
        "summary": "Add a badge collection",
        "description": "Add a badge collection to the game definition",
        "operationId": "addBadgeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "badge",
            "description": "badge",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BadgeCollectionConcept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/badges/{collectionId}": {
      "get": {
        "tags": [
          "badge-collection-concept-controller"
        ],
        "summary": "Get a badge collection",
        "description": "Get the definition of a badge collection in a game",
        "operationId": "readBadgeCollectionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "collectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeCollectionConcept"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "badge-collection-concept-controller"
        ],
        "summary": "Update a badge collection",
        "operationId": "updateBadgeCollectionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "badge-collection-concept-controller"
        ],
        "summary": "Delete a badge collection",
        "operationId": "deleteBadgeCollectionUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "collectionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/challenge": {
      "get": {
        "tags": [
          "challenge-model-controller"
        ],
        "summary": "Get challenge models",
        "operationId": "readChallengeModelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChallengeModel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "challenge-model-controller"
        ],
        "summary": "Add challenge model",
        "operationId": "saveGameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "challengeModel",
            "description": "challengeModel",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeModel"
            }
          },
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChallengeModel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/challenge/{modelId}": {
      "delete": {
        "tags": [
          "challenge-model-controller"
        ],
        "summary": "Delete challenge model",
        "operationId": "deleteChallengeModelsUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/classification": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Get general classification definitions",
        "operationId": "readAllGeneralClassificationsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GeneralClassificationDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Add general classification definition",
        "operationId": "addClassificationTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/classification/{classificationId}": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Get general classification definition",
        "operationId": "readGeneralClassificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Edit general classification definition",
        "operationId": "editClassificationTaskUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "task",
            "description": "task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/incclassification": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Get incremental classification defintions",
        "operationId": "readAllIncrementalUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncrementalClassificationDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Add incremental classification definition",
        "operationId": "createIncrementalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "classification",
            "description": "classification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncrementalClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncrementalClassificationDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/incclassification/{classificationId}": {
      "get": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Get incremental classification defition",
        "operationId": "readIncrementalUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IncrementalClassificationDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Edit general classification definition",
        "operationId": "updateIncrementalClassificationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "classification",
            "description": "classification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncrementalClassificationDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Delete incremental classification definition",
        "operationId": "deleteIncrementalUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/level": {
      "post": {
        "tags": [
          "game-controller"
        ],
        "summary": "Save a level",
        "operationId": "saveLevelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "level",
            "description": "level",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LevelDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LevelDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/level/{levelName}": {
      "delete": {
        "tags": [
          "game-controller"
        ],
        "summary": "Delete a level",
        "operationId": "deleteLevelUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "levelName",
            "in": "path",
            "description": "levelName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/point": {
      "get": {
        "tags": [
          "point-concept-controller"
        ],
        "summary": "Get points",
        "operationId": "readPointsUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PointConcept"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "point-concept-controller"
        ],
        "summary": "Add point",
        "operationId": "addPointUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "point",
            "description": "point",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PointConcept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PointConcept"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/point/{pointId}": {
      "get": {
        "tags": [
          "point-concept-controller"
        ],
        "summary": "Get point",
        "operationId": "readPointUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointId",
            "in": "path",
            "description": "pointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PointConcept"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "point-concept-controller"
        ],
        "summary": "Edit point",
        "operationId": "updatePointUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "point",
            "description": "point",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PointConcept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "point-concept-controller"
        ],
        "summary": "Delete point",
        "operationId": "deletePointUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "pointId",
            "in": "path",
            "description": "pointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/rule": {
      "get": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Get rules",
        "operationId": "readAllRulesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RuleDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Add rule",
        "operationId": "addRuleUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "rule",
            "description": "rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/rule/validate": {
      "post": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Validate rule",
        "operationId": "validateRuleUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "wrapper",
            "description": "wrapper",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleValidateWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/rule/{ruleId}": {
      "get": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Get rule",
        "operationId": "readDbRuleUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Edit rule",
        "operationId": "editRuleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "rule",
            "description": "rule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RuleDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "rule-controller"
        ],
        "summary": "Delete rule",
        "operationId": "deleteDbRuleUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/model/game/{gameId}/start": {
      "put": {
        "tags": [
          "game-controller"
        ],
        "summary": "Start game",
        "description": "The game is able to accept action executions",
        "operationId": "startGameUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/stop": {
      "put": {
        "tags": [
          "game-controller"
        ],
        "summary": "Stop a game",
        "description": "The game will not accept action execution anymore",
        "operationId": "stopGameUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/model/game/{gameId}/task/{classificationId}": {
      "delete": {
        "tags": [
          "classification-controller"
        ],
        "summary": "Delete general classification definition",
        "operationId": "deleteClassificationTaskUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "classificationId",
            "in": "path",
            "description": "classificationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/notification/game/{gameId}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get game notifications",
        "operationId": "readNotificationUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromTs",
            "in": "query",
            "description": "fromTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "toTs",
            "in": "query",
            "description": "toTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "includeTypes",
            "in": "query",
            "description": "includeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeTypes",
            "in": "query",
            "description": "excludeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notification/game/{gameId}/player/{playerId}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get player notifications",
        "operationId": "readPlayerNotificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromTs",
            "in": "query",
            "description": "fromTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "toTs",
            "in": "query",
            "description": "toTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "includeTypes",
            "in": "query",
            "description": "includeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeTypes",
            "in": "query",
            "description": "excludeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notification/game/{gameId}/player/{playerId}/grouped": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get player notifications",
        "operationId": "readPlayerNotificationGroupedUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "playerId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromTs",
            "in": "query",
            "description": "fromTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "toTs",
            "in": "query",
            "description": "toTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "includeTypes",
            "in": "query",
            "description": "includeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeTypes",
            "in": "query",
            "description": "excludeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Collection«Notification»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notification/game/{gameId}/team/{teamId}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "Get team notifications",
        "operationId": "readTeamNotificationUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "description": "gameId",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "name": "fromTs",
            "in": "query",
            "description": "fromTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "toTs",
            "in": "query",
            "description": "toTs",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int64"
          },
          {
            "name": "includeTypes",
            "in": "query",
            "description": "includeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "excludeTypes",
            "in": "query",
            "description": "excludeTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve ",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Collection«Notification»": {
      "type": "object"
    },
    "StructuredProjection": {
      "type": "object",
      "required": [
        "exclude",
        "include"
      ],
      "properties": {
        "excludeFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuredElement"
          }
        },
        "include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuredElement"
          }
        },
        "includeFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuredElement"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuredElement"
          }
        }
      }
    },
    "StateUpdate": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "PROPOSED",
            "ASSIGNED",
            "ACTIVE",
            "COMPLETED",
            "FAILED",
            "REFUSED",
            "AUTO_DISCARDED",
            "CANCELED"
          ]
        },
        "stateDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ChallengeConcept": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "fields": {
          "type": "object"
        },
        "forced": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "PROPOSED",
            "ASSIGNED",
            "ACTIVE",
            "COMPLETED",
            "FAILED",
            "REFUSED",
            "AUTO_DISCARDED",
            "CANCELED"
          ]
        },
        "stateDate": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "date-time"
          }
        },
        "visibility": {
          "$ref": "#/definitions/Visibility"
        }
      }
    },
    "IncrementalClassificationDTO": {
      "type": "object",
      "properties": {
        "classificationName": {
          "type": "string"
        },
        "delayUnit": {
          "type": "string"
        },
        "delayValue": {
          "type": "integer",
          "format": "int32"
        },
        "gameId": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "itemsToNotificate": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "periodName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Projection": {
      "type": "object",
      "required": [
        "exclude",
        "include"
      ],
      "properties": {
        "excludeFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "include": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "QueryElement": {
      "type": "object",
      "required": [
        "clause",
        "conceptName",
        "field",
        "instanceDate",
        "periodName"
      ],
      "properties": {
        "conceptName": {
          "type": "string"
        },
        "periodName": {
          "type": "string"
        },
        "instanceDate": {
          "type": "string",
          "format": "date-time"
        },
        "clause": {
          "type": "string"
        },
        "field": {
          "type": "string"
        }
      }
    },
    "ChallengeChoiceConfig": {
      "type": "object",
      "properties": {
        "deadline": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PlayerLevel": {
      "type": "object",
      "properties": {
        "endLevelScore": {
          "type": "number",
          "format": "double"
        },
        "levelIndex": {
          "type": "integer",
          "format": "int32"
        },
        "levelName": {
          "type": "string"
        },
        "levelValue": {
          "type": "string"
        },
        "pointConcept": {
          "type": "string"
        },
        "startLevelScore": {
          "type": "number",
          "format": "double"
        },
        "toNextLevel": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "LevelDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "pointConcept": {
          "type": "string"
        },
        "thresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThresholdDTO"
          }
        }
      }
    },
    "SortItem": {
      "type": "object",
      "required": [
        "direction",
        "field"
      ],
      "properties": {
        "field": {
          "type": "string"
        },
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      }
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      }
    },
    "GroupChallengeDTO": {
      "type": "object",
      "properties": {
        "attendees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttendeeDTO"
          }
        },
        "challengeModelName": {
          "type": "string"
        },
        "challengePointConcept": {
          "$ref": "#/definitions/PointConceptDTO"
        },
        "challengeTarget": {
          "type": "number",
          "format": "double"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "gameId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "reward": {
          "$ref": "#/definitions/RewardDTO"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "Collection«string»": {
      "type": "object"
    },
    "Page«PlayerStateDTO»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerStateDTO"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ChallengeModel": {
      "type": "object",
      "properties": {
        "gameId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RawSearchQuery": {
      "type": "object",
      "required": [
        "projection",
        "query",
        "sortItems"
      ],
      "properties": {
        "query": {
          "type": "object"
        },
        "projection": {
          "$ref": "#/definitions/Projection"
        },
        "sortItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortItem"
          }
        }
      }
    },
    "WrapperQuery": {
      "type": "object",
      "properties": {
        "complexQuery": {
          "$ref": "#/definitions/ComplexSearchQuery"
        },
        "rawQuery": {
          "$ref": "#/definitions/RawSearchQuery"
        }
      }
    },
    "Settings": {
      "type": "object",
      "properties": {
        "challengeSettings": {
          "$ref": "#/definitions/ChallengeSettings"
        },
        "statisticsConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ChallengeUpdate": {
      "type": "object",
      "properties": {
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "fields": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "stateUpdate": {
          "$ref": "#/definitions/StateUpdate"
        },
        "visibility": {
          "$ref": "#/definitions/Visibility"
        }
      }
    },
    "ClassificationBoard": {
      "type": "object",
      "properties": {
        "board": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationPosition"
          }
        },
        "pointConceptName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "GENERAL",
            "INCREMENTAL"
          ]
        }
      }
    },
    "Player": {
      "type": "object",
      "properties": {
        "playerId": {
          "type": "string"
        }
      }
    },
    "AttendeeDTO": {
      "type": "object",
      "properties": {
        "playerId": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "RuleDTO": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ChallengeDisclosure": {
      "type": "object",
      "properties": {
        "frequency": {
          "$ref": "#/definitions/TimeInterval"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ItemChoice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "CHALLENGE_MODEL"
          ]
        }
      }
    },
    "StructuredSortItem": {
      "type": "object",
      "required": [
        "direction",
        "field"
      ],
      "properties": {
        "field": {
          "$ref": "#/definitions/StructuredElement"
        },
        "direction": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ]
        }
      }
    },
    "ComplexSearchQuery": {
      "type": "object",
      "required": [
        "projection",
        "query",
        "sortItems"
      ],
      "properties": {
        "query": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/List"
          }
        },
        "projection": {
          "$ref": "#/definitions/StructuredProjection"
        },
        "sortItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StructuredSortItem"
          }
        }
      }
    },
    "ClassificationDTO": {
      "type": "object",
      "properties": {
        "classificationName": {
          "type": "string"
        },
        "gameId": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "itemsToNotificate": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PointConceptDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "period": {
          "type": "string"
        }
      }
    },
    "BadgeCollectionConcept": {
      "type": "object",
      "properties": {
        "badgeEarned": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ThresholdDTO": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/Config"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PlayerBlackList": {
      "type": "object",
      "properties": {
        "blockedPlayers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gameId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "playerId": {
          "type": "string"
        }
      }
    },
    "Visibility": {
      "type": "object",
      "properties": {
        "disclosureDate": {
          "type": "string",
          "format": "date-time"
        },
        "hidden": {
          "type": "boolean"
        }
      }
    },
    "Inventory": {
      "type": "object",
      "properties": {
        "challengeActivationActions": {
          "type": "integer",
          "format": "int32"
        },
        "challengeChoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChallengeChoice"
          }
        }
      }
    },
    "PointConceptRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "period": {
          "type": "string"
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "activeModels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "availableModels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "choices": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TeamDTO": {
      "type": "object",
      "properties": {
        "customData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "gameId": {
          "type": "string"
        },
        "inventory": {
          "$ref": "#/definitions/Inventory"
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerLevel"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "state": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Set"
          }
        }
      }
    },
    "RuleValidateWrapper": {
      "type": "object",
      "properties": {
        "rule": {
          "type": "string"
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "gameId": {
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ExecutionDataDTO": {
      "type": "object",
      "properties": {
        "actionId": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "executionMoment": {
          "type": "string",
          "format": "date-time"
        },
        "gameId": {
          "type": "string"
        },
        "playerId": {
          "type": "string"
        }
      }
    },
    "GroupChallenge": {
      "type": "object",
      "properties": {
        "attendees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attendee"
          }
        },
        "challengeModel": {
          "type": "string"
        },
        "challengePointConcept": {
          "$ref": "#/definitions/PointConceptRef"
        },
        "challengeTarget": {
          "type": "number",
          "format": "double"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "gameId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "reward": {
          "$ref": "#/definitions/Reward"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "PROPOSED",
            "ASSIGNED",
            "ACTIVE",
            "COMPLETED",
            "FAILED",
            "REFUSED",
            "AUTO_DISCARDED",
            "CANCELED"
          ]
        },
        "stateDate": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "RewardDTO": {
      "type": "object",
      "properties": {
        "bonusScore": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "calculationPointConcept": {
          "$ref": "#/definitions/PointConceptDTO"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "targetPointConcept": {
          "$ref": "#/definitions/PointConceptDTO"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ArchivedConcept": {
      "type": "object",
      "properties": {
        "archivingDate": {
          "type": "string",
          "format": "date-time"
        },
        "challenge": {
          "$ref": "#/definitions/ChallengeConcept"
        },
        "gameId": {
          "type": "string"
        },
        "groupChallenge": {
          "$ref": "#/definitions/GroupChallenge"
        },
        "id": {
          "type": "string"
        },
        "playerId": {
          "type": "string"
        }
      }
    },
    "GameConcept": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ClassificationPosition": {
      "type": "object",
      "properties": {
        "playerId": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ChallengeInvitation": {
      "type": "object",
      "properties": {
        "challengeEnd": {
          "type": "string",
          "format": "date-time"
        },
        "challengeModelName": {
          "type": "string"
        },
        "challengeName": {
          "type": "string"
        },
        "challengePointConcept": {
          "$ref": "#/definitions/PointConceptRef"
        },
        "challengeStart": {
          "type": "string",
          "format": "date-time"
        },
        "challengeTarget": {
          "type": "number",
          "format": "double"
        },
        "gameId": {
          "type": "string"
        },
        "guests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Player"
          }
        },
        "proposer": {
          "$ref": "#/definitions/Player"
        },
        "reward": {
          "$ref": "#/definitions/Reward"
        }
      }
    },
    "PeriodInstanceImpl": {
      "type": "object",
      "properties": {
        "end": {
          "type": "integer",
          "format": "int64"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "start": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GameStatistics": {
      "type": "object",
      "properties": {
        "average": {
          "type": "number",
          "format": "double"
        },
        "endDate": {
          "type": "integer",
          "format": "int64"
        },
        "gameId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastUpdated": {
          "type": "integer",
          "format": "int64"
        },
        "periodIndex": {
          "type": "string"
        },
        "periodName": {
          "type": "string"
        },
        "pointConceptName": {
          "type": "string"
        },
        "quantiles": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "startDate": {
          "type": "integer",
          "format": "int64"
        },
        "variance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GameDTO": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "badgeCollectionConcept": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BadgeCollectionConcept"
          }
        },
        "challengeChoiceConfig": {
          "$ref": "#/definitions/ChallengeChoiceConfig"
        },
        "classificationTask": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationDTO"
          }
        },
        "domain": {
          "type": "string"
        },
        "expiration": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LevelDTO"
          }
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "pointConcept": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointConcept"
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleDTO"
          }
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        },
        "terminated": {
          "type": "boolean"
        }
      }
    },
    "TimeInterval": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "MILLISEC",
            "SEC",
            "MINUTE",
            "HOUR",
            "DAY"
          ]
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PeriodInternal": {
      "type": "object",
      "properties": {
        "capacity": {
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "identifier": {
          "type": "string"
        },
        "instances": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PeriodInstanceImpl"
          }
        },
        "period": {
          "type": "integer",
          "format": "int64"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Attendee": {
      "type": "object",
      "properties": {
        "challengeScore": {
          "type": "number",
          "format": "double"
        },
        "playerId": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "PROPOSER",
            "GUEST"
          ]
        },
        "valuationTime": {
          "type": "string",
          "format": "date-time"
        },
        "winner": {
          "type": "boolean"
        }
      }
    },
    "ChallengeChoice": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "AVAILABLE",
            "ACTIVE"
          ]
        }
      }
    },
    "ChallengeSettings": {
      "type": "object",
      "properties": {
        "disclosure": {
          "$ref": "#/definitions/ChallengeDisclosure"
        }
      }
    },
    "PlayerStateDTO": {
      "type": "object",
      "properties": {
        "customData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "gameId": {
          "type": "string"
        },
        "inventory": {
          "$ref": "#/definitions/Inventory"
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerLevel"
          }
        },
        "playerId": {
          "type": "string"
        },
        "state": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Set"
          }
        }
      }
    },
    "ChallengeAssignmentDTO": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "hide": {
          "type": "boolean"
        },
        "instanceName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "origin": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "StructuredElement": {
      "type": "object",
      "required": [
        "conceptName",
        "field",
        "instanceDate",
        "periodName",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "conceptName": {
          "type": "string"
        },
        "periodName": {
          "type": "string"
        },
        "instanceDate": {
          "type": "string",
          "format": "date-time"
        },
        "field": {
          "type": "string"
        }
      }
    },
    "Reward": {
      "type": "object",
      "properties": {
        "bonusScore": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "calculationPointConcept": {
          "$ref": "#/definitions/PointConceptRef"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "targetPointConcept": {
          "$ref": "#/definitions/PointConceptRef"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GeneralClassificationDTO": {
      "type": "object",
      "properties": {
        "classificationName": {
          "type": "string"
        },
        "cronExpression": {
          "type": "string"
        },
        "gameId": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        },
        "itemsToNotificate": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PointConcept": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "periods": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/PeriodInternal"
          }
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    }
  }
}