{
	"swagger": "2.0",
	"info": {
		"version": "v1.0",
		"title": "Gamification Engine API",
		"contact": {
			"name": "FBK Smartcommunitylab HII",
			"url": "http://fbk.eu"
		},
		"license": {
			"name": "APACHE LICENSE 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"basePath": "/gamification",
	"securityDefinitions": {
		"oauth2": {
			"type": "oauth2",
			"description": "Bearer Authentication",
			"flow": "application"
		}
	},
	"security": [
		{
			"oauth2": []
		}
	],
	"tags": [
		{
			"name": "domain-execution-controller",
			"description": "Domain Execution Controller"
		},
		{
			"name": "domain-game-controller",
			"description": "Domain Game Controller"
		},
		{
			"name": "domain-challenge-model-controller",
			"description": "Domain Challenge Model Controller"
		},
		{
			"name": "domain-player-controller",
			"description": "Domain Player Controller"
		},
		{
			"name": "domain-notification-controller",
			"description": "Domain Notification Controller"
		},
		{
			"name": "domain-rule-controller",
			"description": "Domain Rule Controller"
		},
		{
			"name": "domain-point-concept-controller",
			"description": "Domain Point Concept Controller"
		},
		{
			"name": "domain-team-controller",
			"description": "Domain Team Controller"
		},
		{
			"name": "domain-badge-collection-concept-controller",
			"description": "Domain Badge Collection Concept Controller"
		},
		{
			"name": "domain-classification-controller",
			"description": "Domain Classification Controller"
		}
	],
	"paths": {
		"/api/{domain}/data/game/{gameId}/classification/{classificationId}": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Read general classification board",
				"operationId": "getGeneralClassificationUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClassificationBoard"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/incclassification/{classificationId}": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Read incremental classification board",
				"operationId": "getIncrementalClassificationUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "timestamp",
						"in": "query",
						"description": "timestamp",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "periodInstanceIndex",
						"in": "query",
						"description": "periodInstanceIndex",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int32"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClassificationBoard"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/search": {
			"post": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Search player states",
				"operationId": "searchByQueryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "query",
						"description": "query",
						"required": true,
						"schema": {
							"$ref": "#/definitions/WrapperQuery"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve ",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«PlayerStateDTO»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player state",
				"operationId": "readPlayerUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "readChallenges",
						"in": "query",
						"description": "readChallenges",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "points",
						"in": "query",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "badges",
						"in": "query",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PlayerStateDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Create player",
				"operationId": "createPlayerUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "player",
						"description": "player",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PlayerStateDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Edit player state",
				"operationId": "updatePlayerUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Delete player state",
				"operationId": "deletePlayerUsingDELETE_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/challenges": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player challenges",
				"operationId": "getPlayerChallengeUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ChallengeConcept"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Assign challenge",
				"operationId": "assignChallengeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "challengeData",
						"description": "challengeData",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ChallengeAssignmentDTO"
						}
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/challenges/{challengeName}/accept": {
			"post": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Accept challenge",
				"operationId": "acceptChallengeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "challengeName",
						"in": "path",
						"description": "challengeName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ChallengeConcept"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/custom": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player custom data",
				"operationId": "readCustomDataUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PlayerStateDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/inventory": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player inventory",
				"operationId": "readInventoryUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Inventory"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/inventory/activate": {
			"post": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Activate a choice",
				"operationId": "activateChoiceUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "choice",
						"description": "choice",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ItemChoice"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Inventory"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/levels": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player levels",
				"operationId": "readLevelsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PlayerLevel"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/state": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player state",
				"operationId": "readStateUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "points",
						"in": "query",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "badges",
						"in": "query",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
				}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PlayerStateDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/player/{playerId}/teams": {
			"get": {
				"tags": [
					"domain-player-controller"
				],
				"summary": "Get player teams",
				"operationId": "readTeamsByMemberUsingGET_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TeamDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/team/{teamId}": {
			"post": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Create team",
				"operationId": "createTeamUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "team",
						"description": "team",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TeamDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Delte team",
				"operationId": "deleteTeamUsingDELETE_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/team/{teamId}/members": {
			"get": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Get team members",
				"operationId": "readTeamMembersUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Collection«string»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Edit team",
				"operationId": "updateTeamMembersUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "members",
						"description": "members",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/data/game/{gameId}/team/{teamId}/members/{playerId}": {
			"put": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Add team member",
				"operationId": "addTeamMemberUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "members",
						"description": "members",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-team-controller"
				],
				"summary": "Delete team member",
				"operationId": "removeTeamMemberUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "members",
						"description": "members",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/exec/game/{gameId}/action/{actionId}": {
			"post": {
				"tags": [
					"domain-execution-controller"
				],
				"summary": "Execute an action",
				"operationId": "executeActionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "actionId",
						"in": "path",
						"description": "actionId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "data",
						"description": "data",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ExecutionDataDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game": {
			"get": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Get games",
				"description": "Get all the game definitions of a user",
				"operationId": "readGamesUsingGET_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GameDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Save a game",
				"operationId": "saveGameUsingPOST_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "game",
						"description": "game",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GameDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GameDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{domain}/action/{actionId}": {
			"put": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Edit action",
				"operationId": "editActionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{domain}/challenge/{modelId}": {
			"delete": {
				"tags": [
					"domain-challenge-model-controller"
				],
				"summary": "Delete challenge model",
				"operationId": "deleteChallengeModelsUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "modelId",
						"in": "path",
						"description": "modelId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}": {
			"get": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Read game definition",
				"operationId": "readGameUsingGET_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GameDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Delete game",
				"operationId": "deleteGameUsingDELETE_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/action": {
			"get": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Get actions",
				"operationId": "readAllActionUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/action/{actionId}": {
			"get": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Get action",
				"operationId": "readActionUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Add action",
				"operationId": "addActionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Delete action",
				"operationId": "deleteActionUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "actionId",
						"in": "path",
						"description": "actionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/badges": {
			"get": {
				"tags": [
					"domain-badge-collection-concept-controller"
				],
				"summary": "Get the badge collections",
				"description": "Get badge collections in a game",
				"operationId": "readBadgeCollectionsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/BadgeCollectionConcept"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-badge-collection-concept-controller"
				],
				"summary": "Add a badge collection",
				"description": "Add a badge collection to the game definition",
				"operationId": "addBadgeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "badge",
						"description": "badge",
						"required": true,
						"schema": {
							"$ref": "#/definitions/BadgeCollectionConcept"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/badges/{collectionId}": {
			"get": {
				"tags": [
					"domain-badge-collection-concept-controller"
				],
				"summary": "Get a badge collection",
				"description": "Get the definition of a badge collection in a game",
				"operationId": "readBadgeCollectionUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "collectionId",
						"in": "path",
						"description": "collectionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/BadgeCollectionConcept"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-badge-collection-concept-controller"
				],
				"summary": "Update a badge collection",
				"operationId": "updateBadgeCollectionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-badge-collection-concept-controller"
				],
				"summary": "Delete a badge collection",
				"operationId": "deleteBadgeCollectionUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "collectionId",
						"in": "path",
						"description": "collectionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/challenge": {
			"get": {
				"tags": [
					"domain-challenge-model-controller"
				],
				"summary": "Get challenge models",
				"operationId": "readChallengeModelsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ChallengeModel"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-challenge-model-controller"
				],
				"summary": "Add challenge model",
				"operationId": "saveGameUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "challengeModel",
						"description": "challengeModel",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ChallengeModel"
						}
					},
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ChallengeModel"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/classification": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Get general classification definitions",
				"operationId": "readAllGeneralClassificationsUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/GeneralClassificationDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Add general classification definition",
				"operationId": "addClassificationTaskUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "task",
						"description": "task",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GeneralClassificationDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GeneralClassificationDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/classification/{classificationId}": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Get general classification definition",
				"operationId": "readGeneralClassificationUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/GeneralClassificationDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Edit general classification definition",
				"operationId": "editClassificationTaskUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "task",
						"description": "task",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GeneralClassificationDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/incclassification": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Get incremental classification defintions",
				"operationId": "readAllIncrementalUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IncrementalClassificationDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Add incremental classification definition",
				"operationId": "createIncrementalUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "classification",
						"description": "classification",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IncrementalClassificationDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/IncrementalClassificationDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/incclassification/{classificationId}": {
			"get": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Get incremental classification defition",
				"operationId": "readIncrementalUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/IncrementalClassificationDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Edit general classification definition",
				"operationId": "updateIncrementalClassificationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "classification",
						"description": "classification",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IncrementalClassificationDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Delete incremental classification definition",
				"operationId": "deleteIncrementalUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/level": {
			"post": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Save a level",
				"operationId": "saveLevelUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "level",
						"description": "level",
						"required": true,
						"schema": {
							"$ref": "#/definitions/LevelDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LevelDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/level/{levelName}": {
			"delete": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Delete a level",
				"operationId": "deleteLevelUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "levelName",
						"in": "path",
						"description": "levelName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/point": {
			"get": {
				"tags": [
					"domain-point-concept-controller"
				],
				"summary": "Get points",
				"operationId": "readPointsUsingGET_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PointConcept"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-point-concept-controller"
				],
				"summary": "Add point",
				"operationId": "addPointUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "point",
						"description": "point",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PointConcept"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PointConcept"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/point/{pointId}": {
			"get": {
				"tags": [
					"domain-point-concept-controller"
				],
				"summary": "Get point",
				"operationId": "readPointUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "pointId",
						"in": "path",
						"description": "pointId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PointConcept"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-point-concept-controller"
				],
				"summary": "Edit point",
				"operationId": "updatePointUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "point",
						"description": "point",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PointConcept"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-point-concept-controller"
				],
				"summary": "Delete point",
				"operationId": "deletePointUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "pointId",
						"in": "path",
						"description": "pointId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/rule": {
			"get": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Get rules",
				"operationId": "readAllRulesUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/RuleDTO"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Add rule",
				"operationId": "addRuleUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "rule",
						"description": "rule",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RuleDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RuleDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/rule/validate": {
			"post": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Validate rule",
				"operationId": "validateRuleUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "wrapper",
						"description": "wrapper",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RuleValidateWrapper"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/rule/{ruleId}": {
			"get": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Get rule",
				"operationId": "readDbRuleUsingGET_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "ruleId",
						"in": "path",
						"description": "ruleId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RuleDTO"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Edit rule",
				"operationId": "editRuleUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "rule",
						"description": "rule",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RuleDTO"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RuleDTO"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"domain-rule-controller"
				],
				"summary": "Delete rule",
				"operationId": "deleteDbRuleUsingDELETE_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "ruleId",
						"in": "path",
						"description": "ruleId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/start": {
			"put": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Start game",
				"description": "The game is able to accept action executions",
				"operationId": "startGameUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/stop": {
			"put": {
				"tags": [
					"domain-game-controller"
				],
				"summary": "Stop a game",
				"description": "The game will not accept action execution anymore",
				"operationId": "stopGameUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/model/game/{gameId}/task/{classificationId}": {
			"delete": {
				"tags": [
					"domain-classification-controller"
				],
				"summary": "Delete general classification definition",
				"operationId": "deleteClassificationTaskUsingDELETE",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "classificationId",
						"in": "path",
						"description": "classificationId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"204": {
						"description": "No Content"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/{domain}/notification/game/{gameId}": {
			"get": {
				"tags": [
					"domain-notification-controller"
				],
				"summary": "Get game notifications",
				"operationId": "readNotificationUsingGET_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "fromTs",
						"in": "query",
						"description": "fromTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "toTs",
						"in": "query",
						"description": "toTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "includeTypes",
						"in": "query",
						"description": "includeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "excludeTypes",
						"in": "query",
						"description": "excludeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve ",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Notification"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/notification/game/{gameId}/player/{playerId}": {
			"get": {
				"tags": [
					"domain-notification-controller"
				],
				"summary": "Get player notifications",
				"operationId": "readPlayerNotificationUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "fromTs",
						"in": "query",
						"description": "fromTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "toTs",
						"in": "query",
						"description": "toTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "includeTypes",
						"in": "query",
						"description": "includeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "excludeTypes",
						"in": "query",
						"description": "excludeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve ",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Notification"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/notification/game/{gameId}/player/{playerId}/grouped": {
			"get": {
				"tags": [
					"domain-notification-controller"
				],
				"summary": "Get player notifications",
				"operationId": "readPlayerNotificationGroupedUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "playerId",
						"in": "path",
						"description": "playerId",
						"required": true,
						"type": "string"
					},
					{
						"name": "fromTs",
						"in": "query",
						"description": "fromTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "toTs",
						"in": "query",
						"description": "toTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "includeTypes",
						"in": "query",
						"description": "includeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "excludeTypes",
						"in": "query",
						"description": "excludeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve ",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"$ref": "#/definitions/Collection«Notification»"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/{domain}/notification/game/{gameId}/team/{teamId}": {
			"get": {
				"tags": [
					"domain-notification-controller"
				],
				"summary": "Get team notifications",
				"operationId": "readTeamNotificationUsingGET",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"description": "domain",
						"required": true,
						"type": "string"
					},
					{
						"name": "gameId",
						"in": "path",
						"description": "gameId",
						"required": true,
						"type": "string"
					},
					{
						"name": "teamId",
						"in": "path",
						"description": "teamId",
						"required": true,
						"type": "string"
					},
					{
						"name": "fromTs",
						"in": "query",
						"description": "fromTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "toTs",
						"in": "query",
						"description": "toTs",
						"required": false,
						"type": "integer",
						"default": -1,
						"format": "int64"
					},
					{
						"name": "includeTypes",
						"in": "query",
						"description": "includeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "excludeTypes",
						"in": "query",
						"description": "excludeTypes",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve ",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Notification"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		}
	},
	"definitions": {
		"StructuredProjection": {
			"type": "object",
			"required": [
				"exclude",
				"include"
			],
			"properties": {
				"include": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StructuredElement"
					}
				},
				"exclude": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StructuredElement"
					}
				}
			}
		},
		"Config": {
			"type": "object",
			"properties": {
				"availableModels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"choices": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ChallengeConcept": {
			"type": "object",
			"properties": {
				"completed": {
					"type": "boolean"
				},
				"dateCompleted": {
					"type": "string",
					"format": "date-time"
				},
				"end": {
					"type": "string",
					"format": "date-time"
				},
				"fields": {
					"type": "object"
				},
				"forced": {
					"type": "boolean"
				},
				"id": {
					"type": "string"
				},
				"modelName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string"
				},
				"priority": {
					"type": "integer",
					"format": "int32"
				},
				"start": {
					"type": "string",
					"format": "date-time"
				},
				"state": {
					"type": "string",
					"enum": [
						"PROPOSED",
						"ASSIGNED",
						"ACTIVE",
						"COMPLETED",
						"FAILED",
						"REFUSED",
						"AUTO_DISCARDED"
					]
				},
				"stateDate": {
					"type": "object",
					"additionalProperties": {
						"type": "string",
						"format": "date-time"
					}
				}
			}
		},
		"IncrementalClassificationDTO": {
			"type": "object",
			"properties": {
				"classificationName": {
					"type": "string"
				},
				"delayUnit": {
					"type": "string"
				},
				"delayValue": {
					"type": "integer",
					"format": "int32"
				},
				"gameId": {
					"type": "string"
				},
				"itemType": {
					"type": "string"
				},
				"itemsToNotificate": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"periodName": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"Projection": {
			"type": "object",
			"required": [
				"exclude",
				"include"
			],
			"properties": {
				"include": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"exclude": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"TeamDTO": {
			"type": "object",
			"properties": {
				"customData": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				},
				"gameId": {
					"type": "string"
				},
				"inventory": {
					"$ref": "#/definitions/Inventory"
				},
				"levels": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PlayerLevel"
					}
				},
				"members": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"name": {
					"type": "string"
				},
				"playerId": {
					"type": "string"
				},
				"state": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Set"
					}
				}
			}
		},
		"QueryElement": {
			"type": "object",
			"required": [
				"clause",
				"conceptName",
				"field",
				"instanceDate",
				"periodName"
			],
			"properties": {
				"conceptName": {
					"type": "string"
				},
				"periodName": {
					"type": "string"
				},
				"instanceDate": {
					"type": "string",
					"format": "date-time"
				},
				"clause": {
					"type": "string"
				},
				"field": {
					"type": "string"
				}
			}
		},
		"RuleValidateWrapper": {
			"type": "object",
			"properties": {
				"rule": {
					"type": "string"
				}
			}
		},
		"ChallengeChoiceConfig": {
			"type": "object",
			"properties": {
				"deadline": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"Notification": {
			"type": "object",
			"properties": {
				"gameId": {
					"type": "string"
				},
				"playerId": {
					"type": "string"
				},
				"timestamp": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"PlayerLevel": {
			"type": "object",
			"properties": {
				"endLevelScore": {
					"type": "number",
					"format": "double"
				},
				"levelIndex": {
					"type": "integer",
					"format": "int32"
				},
				"levelName": {
					"type": "string"
				},
				"levelValue": {
					"type": "string"
				},
				"pointConcept": {
					"type": "string"
				},
				"startLevelScore": {
					"type": "number",
					"format": "double"
				},
				"toNextLevel": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"ExecutionDataDTO": {
			"type": "object",
			"properties": {
				"actionId": {
					"type": "string"
				},
				"data": {
					"type": "object"
				},
				"executionMoment": {
					"type": "string",
					"format": "date-time"
				},
				"gameId": {
					"type": "string"
				},
				"playerId": {
					"type": "string"
				}
			}
		},
		"LevelDTO": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"pointConcept": {
					"type": "string"
				},
				"thresholds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ThresholdDTO"
					}
				}
			}
		},
		"SortItem": {
			"type": "object",
			"required": [
				"direction",
				"field"
			],
			"properties": {
				"field": {
					"type": "string"
				},
				"direction": {
					"type": "string",
					"enum": [
						"ASC",
						"DESC"
					]
				}
			}
		},
		"GameConcept": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"ClassificationPosition": {
			"type": "object",
			"properties": {
				"playerId": {
					"type": "string"
				},
				"score": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"Sort": {
			"type": "object"
		},
		"Collection«string»": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				}
			}
		},
		"Page«PlayerStateDTO»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PlayerStateDTO"
					}
				},
				"first": {
					"type": "boolean"
				},
				"firstPage": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"lastPage": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			}
		},
		"ChallengeModel": {
			"type": "object",
			"properties": {
				"gameId": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"variables": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"RawSearchQuery": {
			"type": "object",
			"required": [
				"projection",
				"query",
				"sortItems"
			],
			"properties": {
				"query": {
					"type": "object"
				},
				"projection": {
					"$ref": "#/definitions/Projection"
				},
				"sortItems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SortItem"
					}
				}
			}
		},
		"WrapperQuery": {
			"type": "object",
			"properties": {
				"complexQuery": {
					"$ref": "#/definitions/ComplexSearchQuery"
				},
				"rawQuery": {
					"$ref": "#/definitions/RawSearchQuery"
				}
			}
		},
		"Settings": {
			"type": "object",
			"properties": {
				"statisticsConfig": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					}
				}
			}
		},
		"PeriodInstanceImpl": {
			"type": "object",
			"properties": {
				"end": {
					"type": "integer",
					"format": "int64"
				},
				"index": {
					"type": "integer",
					"format": "int32"
				},
				"score": {
					"type": "number",
					"format": "double"
				},
				"start": {
					"type": "integer",
					"format": "int64"
				}
			}
		},
		"ClassificationBoard": {
			"type": "object",
			"properties": {
				"board": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClassificationPosition"
					}
				},
				"pointConceptName": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"GENERAL",
						"INCREMENTAL"
					]
				}
			}
		},
		"GameDTO": {
			"type": "object",
			"properties": {
				"actions": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"badgeCollectionConcept": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/BadgeCollectionConcept"
					}
				},
				"challengeChoiceConfig": {
					"$ref": "#/definitions/ChallengeChoiceConfig"
				},
				"classificationTask": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClassificationDTO"
					}
				},
				"domain": {
					"type": "string"
				},
				"expiration": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "string"
				},
				"levels": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LevelDTO"
					}
				},
				"name": {
					"type": "string"
				},
				"owner": {
					"type": "string"
				},
				"pointConcept": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PointConcept"
					}
				},
				"rules": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RuleDTO"
					}
				},
				"settings": {
					"$ref": "#/definitions/Settings"
				},
				"terminated": {
					"type": "boolean"
				}
			}
		},
		"RuleDTO": {
			"type": "object",
			"properties": {
				"content": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"ItemChoice": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"CHALLENGE_MODEL"
					]
				}
			}
		},
		"StructuredSortItem": {
			"type": "object",
			"required": [
				"direction",
				"field"
			],
			"properties": {
				"field": {
					"$ref": "#/definitions/StructuredElement"
				},
				"direction": {
					"type": "string",
					"enum": [
						"ASC",
						"DESC"
					]
				}
			}
		},
		"ComplexSearchQuery": {
			"type": "object",
			"required": [
				"projection",
				"query",
				"sortItems"
			],
			"properties": {
				"query": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/List"
					}
				},
				"projection": {
					"$ref": "#/definitions/StructuredProjection"
				},
				"sortItems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/StructuredSortItem"
					}
				}
			}
		},
		"PeriodInternal": {
			"type": "object",
			"properties": {
				"capacity": {
					"type": "integer",
					"format": "int32"
				},
				"identifier": {
					"type": "string"
				},
				"instances": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/PeriodInstanceImpl"
					}
				},
				"period": {
					"type": "integer",
					"format": "int64"
				},
				"start": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"ClassificationDTO": {
			"type": "object",
			"properties": {
				"classificationName": {
					"type": "string"
				},
				"gameId": {
					"type": "string"
				},
				"itemType": {
					"type": "string"
				},
				"itemsToNotificate": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"ChallengeChoice": {
			"type": "object",
			"properties": {
				"modelName": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"AVAILABLE",
						"ACTIVE"
					]
				}
			}
		},
		"PlayerStateDTO": {
			"type": "object",
			"properties": {
				"customData": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				},
				"gameId": {
					"type": "string"
				},
				"inventory": {
					"$ref": "#/definitions/Inventory"
				},
				"levels": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PlayerLevel"
					}
				},
				"playerId": {
					"type": "string"
				},
				"state": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/Set"
					}
				}
			}
		},
		"BadgeCollectionConcept": {
			"type": "object",
			"properties": {
				"badgeEarned": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"ThresholdDTO": {
			"type": "object",
			"properties": {
				"config": {
					"$ref": "#/definitions/Config"
				},
				"name": {
					"type": "string"
				},
				"value": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"ChallengeAssignmentDTO": {
			"type": "object",
			"properties": {
				"data": {
					"type": "object"
				},
				"end": {
					"type": "string",
					"format": "date-time"
				},
				"instanceName": {
					"type": "string"
				},
				"modelName": {
					"type": "string"
				},
				"origin": {
					"type": "string"
				},
				"priority": {
					"type": "integer",
					"format": "int32"
				},
				"start": {
					"type": "string",
					"format": "date-time"
				},
				"state": {
					"type": "string"
				}
			}
		},
		"StructuredElement": {
			"type": "object",
			"required": [
				"conceptName",
				"field",
				"instanceDate",
				"periodName",
				"type"
			],
			"properties": {
				"type": {
					"type": "string"
				},
				"conceptName": {
					"type": "string"
				},
				"periodName": {
					"type": "string"
				},
				"instanceDate": {
					"type": "string",
					"format": "date-time"
				},
				"field": {
					"type": "string"
				}
			}
		},
		"GeneralClassificationDTO": {
			"type": "object",
			"properties": {
				"classificationName": {
					"type": "string"
				},
				"cronExpression": {
					"type": "string"
				},
				"gameId": {
					"type": "string"
				},
				"itemType": {
					"type": "string"
				},
				"itemsToNotificate": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			}
		},
		"PointConcept": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"periods": {
					"type": "object",
					"additionalProperties": {
						"$ref": "#/definitions/PeriodInternal"
					}
				},
				"score": {
					"type": "number",
					"format": "double"
				}
			}
		},
		"Inventory": {
			"type": "object",
			"properties": {
				"challengeActivationActions": {
					"type": "integer",
					"format": "int32"
				},
				"challengeChoices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ChallengeChoice"
					}
				}
			}
		}
	}
}