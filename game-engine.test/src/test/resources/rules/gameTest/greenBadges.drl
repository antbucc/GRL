package eu.trentorise.game.model

import eu.trentorise.game.notification.BadgeNotification;
import eu.trentorise.game.core.Utility;

global Utility utils;

rule "10 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 10.0)
    $bc : BadgeCollectionConcept(name == "green leaves", badgeEarned not contains '10-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'10-point-green badge\'");
	$bc.getBadgeEarned().add('10-point-green');
	insert( new BadgeNotification($gameId,$playerId,'10-point-green'));
	update( $bc );
end

rule "50 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 50.0)
    $bc : BadgeCollectionConcept(name == 'green leaves', badgeEarned not contains '50-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'50-point-green badge\'");
	$bc.getBadgeEarned().add('50-point-green');
	insert(new BadgeNotification($gameId,$playerId,'50-point-green'));
	update( $bc );
end

rule "100 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 100.0)
    $bc : BadgeCollectionConcept(name == 'green leaves', badgeEarned not contains '100-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'100-point-green badge\'");
	$bc.getBadgeEarned().add('100-point-green');
	insert(new BadgeNotification($gameId,$playerId,'100-point-green'));
	update( $bc );
end

rule "250 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 250.0)
    $bc : BadgeCollectionConcept(name == 'green leaves', badgeEarned not contains '250-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'250-point-green badge\'");
	$bc.getBadgeEarned().add('250-point-green');
	insert( new BadgeNotification($gameId,$playerId,'250-point-green'));
	update( $bc );
end

rule "500 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 500.0)
    $bc : BadgeCollectionConcept(name == 'green leaves', badgeEarned not contains '500-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'500-point-green badge\'");
	$bc.getBadgeEarned().add('500-point-green');
	insert( new BadgeNotification($gameId,$playerId,'500-point-green'));
	update( $bc );
end

rule "1000 point green badge"
	salience -1000
when
    PointConcept(name == 'green leaves', score >= 1000.0)
    $bc : BadgeCollectionConcept(name == "green leaves", badgeEarned not contains '1000-point-green')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'1000-point-green badge\'");
	$bc.getBadgeEarned().add('1000-point-green');
	insert( new BadgeNotification($gameId,$playerId,'1000-point-green'));
	update( $bc );
end
