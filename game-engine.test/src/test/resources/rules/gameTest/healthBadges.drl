package eu.trentorise.game.model

import eu.trentorise.game.notification.BadgeNotification;

import eu.trentorise.game.core.Utility;

global Utility utils;


rule "10 point health badge"
	salience -1000
when
    PointConcept(name == 'health', score >= 10.0)
    $bc : BadgeCollectionConcept(name == "health", badgeEarned not contains '10-point-health')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'10-point-health badge\'");
	$bc.getBadgeEarned().add('10-point-health');
	insert( new BadgeNotification($gameId,$playerId,'10-point-health'));
	update( $bc );
end

rule "25 point health badge"
	salience -1000
when
    PointConcept(name == 'health', score >= 25.0)
    $bc : BadgeCollectionConcept(name == "health", badgeEarned not contains '25-point-health')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'25-point-health badge\'");
	$bc.getBadgeEarned().add('25-point-health');
	insert( new BadgeNotification($gameId,$playerId,'25-point-health'));
	update( $bc );
end


rule "50 point health badge"
	salience -1000
when
    PointConcept(name == 'health', score >= 50.0)
    $bc : BadgeCollectionConcept(name == "health", badgeEarned not contains '50-point-health')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'50-point-health badge\'");
	$bc.getBadgeEarned().add('50-point-health');
	insert( new BadgeNotification($gameId,$playerId,'50-point-health'));
	update( $bc );
end

rule "100 point health badge"
	salience -1000
when
    PointConcept(name == 'health', score >= 100.0)
    $bc : BadgeCollectionConcept(name == "health", badgeEarned not contains '100-point-health')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'100-point-health badge\'");
	$bc.getBadgeEarned().add('100-point-health');
	insert( new BadgeNotification($gameId,$playerId,'100-point-health'));
	update( $bc );
end

rule "200 point health badge"
	salience -1000
when
    PointConcept(name == 'health', score >= 200.0)
    $bc : BadgeCollectionConcept(name == "health", badgeEarned not contains '200-point-health')
    Game( $gameId: id)
    Player( $playerId : id)
then
	utils.log("apply \'200-point-health badge\'");
	$bc.getBadgeEarned().add('200-point-health');
	insert( new BadgeNotification($gameId,$playerId,'200-point-health'));
	update( $bc );
end