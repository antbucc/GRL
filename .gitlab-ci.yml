image: docker:19

services:
  - docker:dind

stages:
  - build
  - stats-container-build
  - backend-container-build
  - test
  - container-scan
  - deploy-dev
  - deploy-test
  - deploy-prod

include:
  - template: Security/Container-Scanning.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml

variables:
  SECURE_LOG_LEVEL: info
  DS_JAVA_VERSION: 11
  DOCKER_DRIVER: overlay
  CONTAINER_IMAGE: smartcommunitylab/gamification-engine:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
  CONTAINER_IMAGE_LATEST: smartcommunitylab/gamification-engine:$CI_COMMIT_REF_NAME-latest

maven-build:
  image: maven:3-openjdk-11
  stage: build
  script:
    - apt update && apt install -y nodejs npm git && rm -rf /var/lib/apt/lists/*
    - npm install -g bower
    - cd ${CI_PROJECT_DIR}/game-engine.core
    - mvn -DskipTests=true clean install -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
    - cd ${CI_PROJECT_DIR}/game-engine.web/src/main/resources/consoleweb-assets
    - bower --allow-root install
    - cd ${CI_PROJECT_DIR}/game-engine.web
    - mvn clean install -DskipTests -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
    - cd ${CI_PROJECT_DIR}/game-engine.tools/log2timescaledb
    - mvn clean install -DskipTests -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/.m2/
      - game-engine.core/
      - game-engine.web/
      - game-engine.tools/log2timescaledb
    expire_in: 1 week

spotbugs-sast:
  dependencies:
    - maven-build
  variables:
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/
    SECURE_LOG_LEVEL: "debug"
    SAST_JAVA_VERSION: 11
    COMPILE: "false"
    SAST_EXCLUDED_PATHS: "geme-engine.games, game-engine.test, game-engine.tools, gamification-java-client"
    SAST_BANDIT_EXCLUDED_PATHS: '*/geme-engine.games/*, */game-engine.test/*, */game-engine.tools/*, */gamification-java-client/*'
  artifacts:
    reports:
      sast: gl-sast-report.json
    expire_in: 1 week

backend-container-build:
  stage: backend-container-build
  environment:
    name: $CI_COMMIT_REF_NAME
  script:
    - docker login -u $DHUB_USER -p $DHUB_PASS
    - DOCKER_BUILDKIT=1 docker build -f Dockerfile -t $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .
    - docker push $CONTAINER_IMAGE
    - docker push $CONTAINER_IMAGE_LATEST
  only:
    - playAndGo-dev-v2
    - playAndGo-prod-v2
  artifacts:
    expire_in: 1 week

container_scanning:
  stage: container-scan
  dependencies:
  - backend-container-build
  variables:
    DOCKER_IMAGE: smartcommunitylab/gamification-engine:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    DOCKERFILE_PATH: "Dockerfile"
    GIT_STRATEGY: fetch
    DOCKER_USER: ""
    DOCKER_PASSWORD: ""
  artifacts:
    expire_in: 1 week
    
deploy-dev:
  stage: deploy-dev
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  environment:
    name: platform-new
  script:
    - echo "deploy backend"
    - kubectl -n playngo-dev set image deployments/gamification-engine gamification-engine=$CONTAINER_IMAGE --record=true
    - kubectl -n playngo-dev rollout status deployment gamification-engine
  only:
    - playAndGo-dev-v2

deploy-test:
  stage: deploy-test
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  environment:
    name: platform-new
  script:
    - echo "deploy backend"
    - kubectl -n gamification-test set image deployments/gamification-engine gamification-engine=$CONTAINER_IMAGE --record=true
    - kubectl -n gamification-test rollout status deployment gamification-engine
  only:
    - playAndGo-dev-v2

deploy-prod:
  stage: deploy-prod
  image: 
    name: bitnami/kubectl:latest
    entrypoint: ['']
  environment:
    name: platform-new
  script:
    - echo "deploy backend"
    - kubectl -n playngo-prod set image deployments/gamification-engine gamification-engine=$CONTAINER_IMAGE --record=true
    - kubectl -n playngo-prod rollout status deployment gamification-engine
  only:
    - playAndGo-prod-v2