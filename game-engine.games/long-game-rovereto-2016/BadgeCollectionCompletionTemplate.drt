template header

ch_ID
ch_player
ch_badge_collection
ch_point_type

package eu.trentorise.game.model

// completa la Badge Collection <X> e vinci un bonus di <Y> Green Points
/* Parameters for the template
ch_ID = unique Challenge ID (ALWAYS!): obtained via UUID
ch_player = unique Player ID - for now simply Object.toString()
ch_badge_collection
ch_point_type
*/

/*
 CustomData to have   []=used by
    ID is a unique string that identifies the challenge instance
  
  - ch_ID_startChTs [rule] [presentation]
  - ch_ID_endChTs [rule] [presentation]
  - ch_ID_bonus [presentation]
  - ch_ID_type [presentation]
  - ch_ID_target [rule] [presentation] this must hold the TOTAL number of possible badge for the Badge Collection
  - ch_ID_badge_collection [rule] [presentation]
  - ch_ID_success [rule] [presentation]
  - ch_ID_point_type [presentation] type of bonus point -> it must contain the name of PointConcept ("green leaves" for example)
*/

template "BadgeCollectionCompletion"

rule 'ch_@{ch_ID}_check'
when
	$c : CustomData($now : System.currentTimeMillis(), this['ch_@{ch_ID}_startChTs'] <= $now, this['ch_@{ch_ID}_endChTs'] > $now, 
		$collSize : this['ch_@{ch_ID}_target'] != null, this['ch_@{ch_ID}_success'] != true)
	Player(id == '@{ch_player}')
	$bc : BadgeCollectionConcept(name == '@{ch_badge_collection}', badgeEarned.size() == $collSize) 
	$pc : PointConcept(name == "@{ch_point_type}")
then
	$pc.setScore($pc.getScore() + (Integer) $c.get("ch_@{ch_ID}_bonus"));
	$c.put("ch_@{ch_ID}_success",true);
	insert(new PointDelta((Integer)$c.get("ch_@{ch_ID}_bonus"),"@{ch_point_type}"));
	log("ch_@{ch_ID} success -- Badge Collection @{ch_badge_collection} of Player @{ch_player} COMPLETE");
	update($c);
	update($pc); 
end

end template